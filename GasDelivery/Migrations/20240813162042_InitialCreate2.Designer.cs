// <auto-generated />
using System;
using GasDelivery.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GasDelivery.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20240813162042_InitialCreate2")]
    partial class InitialCreate2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GasDelivery.Models.InfoCliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cruce_calles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("No_exterior")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("No_interior")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("InfoClientes");
                });

            modelBuilder.Entity("GasDelivery.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Costo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Estado_pedido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Hora_llegada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Hora_salida")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_InfoCliente")
                        .HasColumnType("int");

                    b.Property<int>("Id_repartidor")
                        .HasColumnType("int");

                    b.Property<string>("Metodo_pago")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tiempo_estimado")
                        .HasColumnType("int");

                    b.Property<string>("Tipo_servicio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id_InfoCliente")
                        .IsUnique();

                    b.HasIndex("Id_repartidor");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("GasDelivery.Models.Repartidor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comentario_estado_repartidor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado_repartidor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ubicacion_actual")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Repartidor");
                });

            modelBuilder.Entity("GasDelivery.Models.Suscripcion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha_fin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Fecha_inicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_InfoCliente")
                        .HasColumnType("int");

                    b.Property<string>("Periodicidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo_servicio")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id_InfoCliente")
                        .IsUnique();

                    b.ToTable("Suscripciones");
                });

            modelBuilder.Entity("GasDelivery.Models.Tarjeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha_Vencimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_Usuario")
                        .HasColumnType("int");

                    b.Property<DateTime>("Nip")
                        .HasColumnType("datetime2");

                    b.Property<int>("Numero_tarjeta")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id_Usuario");

                    b.ToTable("Tarjetas");
                });

            modelBuilder.Entity("GasDelivery.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Contrasena")
                        .HasColumnType("int");

                    b.Property<int>("Id_InfoCliente")
                        .HasColumnType("int");

                    b.Property<int>("NombreUsuario")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id_InfoCliente")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("GasDelivery.Models.Pedido", b =>
                {
                    b.HasOne("GasDelivery.Models.InfoCliente", "InfoCliente")
                        .WithOne("Pedido")
                        .HasForeignKey("GasDelivery.Models.Pedido", "Id_InfoCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GasDelivery.Models.Repartidor", "Repartidor")
                        .WithMany("Pedidos")
                        .HasForeignKey("Id_repartidor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InfoCliente");

                    b.Navigation("Repartidor");
                });

            modelBuilder.Entity("GasDelivery.Models.Suscripcion", b =>
                {
                    b.HasOne("GasDelivery.Models.InfoCliente", "InfoCliente")
                        .WithOne("Suscripcion")
                        .HasForeignKey("GasDelivery.Models.Suscripcion", "Id_InfoCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InfoCliente");
                });

            modelBuilder.Entity("GasDelivery.Models.Tarjeta", b =>
                {
                    b.HasOne("GasDelivery.Models.Usuario", "Usuario")
                        .WithMany("Tarjetas")
                        .HasForeignKey("Id_Usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GasDelivery.Models.Usuario", b =>
                {
                    b.HasOne("GasDelivery.Models.InfoCliente", "InfoCliente")
                        .WithOne("Usuarios")
                        .HasForeignKey("GasDelivery.Models.Usuario", "Id_InfoCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InfoCliente");
                });

            modelBuilder.Entity("GasDelivery.Models.InfoCliente", b =>
                {
                    b.Navigation("Pedido");

                    b.Navigation("Suscripcion");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("GasDelivery.Models.Repartidor", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("GasDelivery.Models.Usuario", b =>
                {
                    b.Navigation("Tarjetas");
                });
#pragma warning restore 612, 618
        }
    }
}
